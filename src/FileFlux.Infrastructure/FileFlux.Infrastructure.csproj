<Project Sdk="Microsoft.NET.Sdk">

  <!-- All common properties inherited from Directory.Build.props -->
  <!-- Project-specific properties are defined in Directory.Build.props based on MSBuildProjectName -->

  <ItemGroup>
    <ProjectReference Include="..\FileFlux.Core\FileFlux.Core.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\FileFlux.Domain\FileFlux.Domain.csproj" PrivateAssets="all" />
  </ItemGroup>
  
  <!-- NuGet packaging configuration to include all assemblies -->
  <PropertyGroup>
    <!-- Include referenced project DLLs in the NuGet package -->
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  
  <!-- Custom target to include project references and dependencies in package -->
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <!-- Include Core and Domain DLLs and their XML docs in the package -->
      <BuildOutputInPackage Include="$(OutputPath)FileFlux.Core.dll" />
      <BuildOutputInPackage Include="$(OutputPath)FileFlux.Domain.dll" />
      <BuildOutputInPackage Include="$(OutputPath)FileFlux.Core.xml" Condition="Exists('$(OutputPath)FileFlux.Core.xml')" />
      <BuildOutputInPackage Include="$(OutputPath)FileFlux.Domain.xml" Condition="Exists('$(OutputPath)FileFlux.Domain.xml')" />

      <!-- Include all dependency DLLs in the package to avoid version conflicts -->
      <BuildOutputInPackage Include="$(OutputPath)*.dll" Exclude="$(OutputPath)FileFlux.*.dll" />
    </ItemGroup>
  </Target>
  
  <!-- After build, copy dependencies to output -->
  <Target Name="CopyProjectReferencesToOutput" AfterTargets="Build">
    <ItemGroup>
      <_CoreDll Include="..\FileFlux.Core\bin\$(Configuration)\$(TargetFramework)\FileFlux.Core.dll" />
      <_DomainDll Include="..\FileFlux.Domain\bin\$(Configuration)\$(TargetFramework)\FileFlux.Domain.dll" />
    </ItemGroup>
    
    <Copy SourceFiles="@(_CoreDll)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(_DomainDll)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
  </Target>

  <ItemGroup>
    <!-- Microsoft Extensions packages with PrivateAssets to avoid version conflicts -->
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="9.0.9" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.9" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Extensions.ObjectPool" Version="9.0.9" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="9.0.9" PrivateAssets="all" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="9.0.9" PrivateAssets="all" />

    <!-- Document Processing Libraries with PrivateAssets to bundle them -->
    <PackageReference Include="DocumentFormat.OpenXml" Version="3.3.0" PrivateAssets="all" />
    <PackageReference Include="PdfPig" Version="0.1.11" PrivateAssets="all" />
    <PackageReference Include="HtmlAgilityPack" Version="1.12.3" PrivateAssets="all" />
    <PackageReference Include="CsvHelper" Version="33.1.0" PrivateAssets="all" />
    <PackageReference Include="Markdig" Version="0.42.0" PrivateAssets="all" />
  </ItemGroup>

</Project>